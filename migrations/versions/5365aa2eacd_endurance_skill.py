"""endurance_skill

Revision ID: 5365aa2eacd
Revises: 4e31c91077f
Create Date: 2017-06-17 21:03:39.736613

"""

# revision identifiers, used by Alembic.
revision = '5365aa2eacd'
down_revision = '4e31c91077f'

from random import randint, choice

from alembic import op
import sqlalchemy as sa

DdBase = sa.ext.declarative.declarative_base()

class DdPlayerHelper(DdBase):
    __tablename__ = 'players'
    __table_args__ = {'extend_existing': True}
    pk_n = sa.Column(sa.Integer, primary_key=True)
    endurance_n = sa.Column(sa.Numeric(5,2))
    current_stamina_n = sa.Column(sa.Integer)
    endurance_pk = sa.Column(
        sa.Integer,
        sa.ForeignKey('skills.pk'),
        nullable=False
    )

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('absolute_maximum_n', sa.SmallInteger(), nullable=False),
    sa.Column('current_maximum_n', sa.SmallInteger(), nullable=False),
    sa.Column('current_value_n', sa.SmallInteger(), nullable=False),
    sa.Column('talent_n', sa.SmallInteger(), nullable=False),
    sa.Column('experience_n', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    with op.batch_alter_table('players') as bop:
        bop.add_column(sa.Column('endurance_pk', sa.Integer()))
        bop.create_foreign_key(
            'skill_constraint',
            'skills',
            ['endurance_pk'],
            ['pk']
        )

    DdBase.metadata.bind = op.get_bind()
    skills = sa.Table('skills', sa.MetaData(), autoload=True, autoload_with=op.get_bind())
    connection = op.get_bind()
    Session = sa.orm.sessionmaker(bind=connection)
    session = Session()
    ind = 1
    for row in session.query(DdPlayerHelper).all():
        absmax = int(float(row.endurance_n) * 10)
        curmax = int(round(absmax / randint(2, 4)))
        talent = choice([1, 2, 4])
        connection.execute(
            skills.insert().values(
                pk=ind,
                absolute_maximum_n=absmax,
                current_maximum_n=curmax,
                current_value_n=curmax,
                talent_n=talent,
                experience_n=0,
            )
        )
        if row.current_stamina_n > curmax:
            stamina = curmax
        else:
            stamina = row.current_stamina_n
        session.query(DdPlayerHelper).filter_by(pk_n=row.pk_n).update(
            {
                'endurance_pk': ind,
                'current_stamina_n': stamina
            }
        )
        ind += 1
    with op.batch_alter_table('players') as bop:
        bop.drop_column('endurance_n')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('players', sa.Column('endurance_n', sa.NUMERIC(precision=5, scale=2), nullable=True))
    connection = op.get_bind()
    skills = sa.Table(
        'skills',
        sa.MetaData(),
        autoload=True,
        autoload_with=connection
    )
    Session = sa.orm.sessionmaker(bind=connection)
    session = Session()
    for row in connection.execute(skills.select()):
        session.query(DdPlayerHelper).filter_by(endurance_pk=row.pk).update(
            {
                'endurance_n': round(row.absolute_maximum_n / 10, 2),
            }
        )
    with op.batch_alter_table('players') as bop:
        bop.drop_constraint(None, type_='foreignkey')
        bop.drop_column('endurance_pk')
    op.drop_table('skills')
    ### end Alembic commands ###
