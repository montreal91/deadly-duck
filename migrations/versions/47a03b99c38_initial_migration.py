"""Initial migration

Revision ID: 47a03b99c38
Revises: None
Create Date: 2017-12-23 10:45:13.314164

"""

# revision identifiers, used by Alembic.
revision = '47a03b99c38'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clubs',
    sa.Column('club_id_n', sa.Integer(), nullable=False),
    sa.Column('club_name_c', sa.String(length=64), nullable=True),
    sa.Column('division_n', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('club_id_n')
    )
    op.create_table('roles',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('pk'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_roles_default'), 'roles', ['default'], unique=False)
    op.create_table('universities',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('name_c', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_universities_name_c'), 'universities', ['name_c'], unique=True)
    op.create_table('faculties',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('name_c', sa.String(length=64), nullable=False),
    sa.Column('university_pk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_pk'], ['universities.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_faculties_name_c'), 'faculties', ['name_c'], unique=False)
    op.create_table('users',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('role_pk', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('about_me', sa.Text(), nullable=True),
    sa.Column('member_since', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('avatar_hash', sa.String(length=32), nullable=True),
    sa.Column('managed_club_pk', sa.Integer(), nullable=True),
    sa.Column('current_season_n', sa.Integer(), nullable=True),
    sa.Column('current_day_n', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['managed_club_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['role_pk'], ['roles.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('faculty_registrations',
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('faculty_pk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_pk'], ['faculties.pk'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], )
    )
    op.create_table('financial_accounts',
    sa.Column('pk_n', sa.Integer(), nullable=False),
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('club_pk', sa.Integer(), nullable=True),
    sa.Column('money_nn', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['club_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk_n')
    )
    op.create_table('friend_requests',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('from_pk', sa.Integer(), nullable=True),
    sa.Column('to_pk', sa.Integer(), nullable=True),
    sa.Column('timestamp_dt', sa.DateTime(), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('is_rejected', sa.Boolean(), nullable=True),
    sa.Column('message_txt', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['from_pk'], ['users.pk'], ),
    sa.ForeignKeyConstraint(['to_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('friendship',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('friend_one_pk', sa.Integer(), nullable=True),
    sa.Column('friend_two_pk', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('timestamp_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['friend_one_pk'], ['users.pk'], ),
    sa.ForeignKeyConstraint(['friend_two_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('messages',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('from_pk', sa.Integer(), nullable=True),
    sa.Column('to_pk', sa.Integer(), nullable=True),
    sa.Column('subject_c', sa.String(length=64), nullable=True),
    sa.Column('text_txt', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('timestamp_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_pk'], ['users.pk'], ),
    sa.ForeignKeyConstraint(['to_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('players',
    sa.Column('pk_n', sa.Integer(), nullable=False),
    sa.Column('first_name_c', sa.String(length=64), nullable=False),
    sa.Column('second_name_c', sa.String(length=64), nullable=True),
    sa.Column('last_name_c', sa.String(length=64), nullable=False),
    sa.Column('technique_n', sa.Integer(), nullable=True),
    sa.Column('endurance_n', sa.Integer(), nullable=True),
    sa.Column('experience_n', sa.Integer(), nullable=True),
    sa.Column('exhaustion_n', sa.Integer(), nullable=True),
    sa.Column('abilities_c', sa.String(length=6), nullable=True),
    sa.Column('current_stamina_n', sa.Integer(), nullable=True),
    sa.Column('age_n', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('club_pk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk_n')
    )
    op.create_table('playoff_series',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('top_seed_pk', sa.Integer(), nullable=True),
    sa.Column('low_seed_pk', sa.Integer(), nullable=True),
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('top_seed_victories_n', sa.Integer(), nullable=False),
    sa.Column('low_seed_victories_n', sa.Integer(), nullable=False),
    sa.Column('season_n', sa.Integer(), nullable=False),
    sa.Column('round_n', sa.Integer(), nullable=False),
    sa.Column('is_finished', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['low_seed_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['top_seed_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_playoff_series_low_seed_pk'), 'playoff_series', ['low_seed_pk'], unique=False)
    op.create_index(op.f('ix_playoff_series_pk'), 'playoff_series', ['pk'], unique=False)
    op.create_index(op.f('ix_playoff_series_round_n'), 'playoff_series', ['round_n'], unique=False)
    op.create_index(op.f('ix_playoff_series_season_n'), 'playoff_series', ['season_n'], unique=False)
    op.create_index(op.f('ix_playoff_series_top_seed_pk'), 'playoff_series', ['top_seed_pk'], unique=False)
    op.create_index(op.f('ix_playoff_series_user_pk'), 'playoff_series', ['user_pk'], unique=False)
    op.create_table('posts',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('author_pk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_posts_timestamp'), 'posts', ['timestamp'], unique=False)
    op.create_table('university_registrations',
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('university_pk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_pk'], ['universities.pk'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], )
    )
    op.create_table('club_records',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('club_pk', sa.Integer(), nullable=True),
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('season_n', sa.Integer(), nullable=True),
    sa.Column('regular_season_position_n', sa.Integer(), nullable=True),
    sa.Column('regular_season_points_n', sa.Integer(), nullable=True),
    sa.Column('last_playoff_series_pk', sa.Integer(), nullable=True),
    sa.Column('timestamp_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['club_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['last_playoff_series_pk'], ['playoff_series.pk'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_index(op.f('ix_club_records_club_pk'), 'club_records', ['club_pk'], unique=False)
    op.create_index(op.f('ix_club_records_pk'), 'club_records', ['pk'], unique=False)
    op.create_index(op.f('ix_club_records_season_n'), 'club_records', ['season_n'], unique=False)
    op.create_index(op.f('ix_club_records_user_pk'), 'club_records', ['user_pk'], unique=False)
    op.create_table('matches',
    sa.Column('match_pk_n', sa.Integer(), nullable=False),
    sa.Column('home_team_pk', sa.Integer(), nullable=True),
    sa.Column('away_team_pk', sa.Integer(), nullable=True),
    sa.Column('user_pk', sa.Integer(), nullable=True),
    sa.Column('home_player_pk', sa.Integer(), nullable=True),
    sa.Column('away_player_pk', sa.Integer(), nullable=True),
    sa.Column('season_n', sa.Integer(), nullable=True),
    sa.Column('day_n', sa.Integer(), nullable=True),
    sa.Column('context_json', sa.Text(), nullable=True),
    sa.Column('status_en', postgresql.ENUM('planned', 'finished', 'aborted', name='match_status'), nullable=False),
    sa.Column('playoff_series_pk', sa.Integer(), nullable=True),
    sa.Column('home_sets_n', sa.Integer(), nullable=True),
    sa.Column('away_sets_n', sa.Integer(), nullable=True),
    sa.Column('home_games_n', sa.Integer(), nullable=True),
    sa.Column('away_games_n', sa.Integer(), nullable=True),
    sa.Column('full_score_c', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['away_player_pk'], ['players.pk_n'], ),
    sa.ForeignKeyConstraint(['away_team_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['home_player_pk'], ['players.pk_n'], ),
    sa.ForeignKeyConstraint(['home_team_pk'], ['clubs.club_id_n'], ),
    sa.ForeignKeyConstraint(['playoff_series_pk'], ['playoff_series.pk'], ),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('match_pk_n')
    )
    op.create_index(op.f('ix_matches_away_player_pk'), 'matches', ['away_player_pk'], unique=False)
    op.create_index(op.f('ix_matches_away_team_pk'), 'matches', ['away_team_pk'], unique=False)
    op.create_index(op.f('ix_matches_day_n'), 'matches', ['day_n'], unique=False)
    op.create_index(op.f('ix_matches_home_player_pk'), 'matches', ['home_player_pk'], unique=False)
    op.create_index(op.f('ix_matches_home_team_pk'), 'matches', ['home_team_pk'], unique=False)
    op.create_index(op.f('ix_matches_match_pk_n'), 'matches', ['match_pk_n'], unique=False)
    op.create_index(op.f('ix_matches_season_n'), 'matches', ['season_n'], unique=False)
    op.create_index(op.f('ix_matches_user_pk'), 'matches', ['user_pk'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_matches_user_pk'), table_name='matches')
    op.drop_index(op.f('ix_matches_season_n'), table_name='matches')
    op.drop_index(op.f('ix_matches_match_pk_n'), table_name='matches')
    op.drop_index(op.f('ix_matches_home_team_pk'), table_name='matches')
    op.drop_index(op.f('ix_matches_home_player_pk'), table_name='matches')
    op.drop_index(op.f('ix_matches_day_n'), table_name='matches')
    op.drop_index(op.f('ix_matches_away_team_pk'), table_name='matches')
    op.drop_index(op.f('ix_matches_away_player_pk'), table_name='matches')
    op.drop_table('matches')
    op.drop_index(op.f('ix_club_records_user_pk'), table_name='club_records')
    op.drop_index(op.f('ix_club_records_season_n'), table_name='club_records')
    op.drop_index(op.f('ix_club_records_pk'), table_name='club_records')
    op.drop_index(op.f('ix_club_records_club_pk'), table_name='club_records')
    op.drop_table('club_records')
    op.drop_table('university_registrations')
    op.drop_index(op.f('ix_posts_timestamp'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_playoff_series_user_pk'), table_name='playoff_series')
    op.drop_index(op.f('ix_playoff_series_top_seed_pk'), table_name='playoff_series')
    op.drop_index(op.f('ix_playoff_series_season_n'), table_name='playoff_series')
    op.drop_index(op.f('ix_playoff_series_round_n'), table_name='playoff_series')
    op.drop_index(op.f('ix_playoff_series_pk'), table_name='playoff_series')
    op.drop_index(op.f('ix_playoff_series_low_seed_pk'), table_name='playoff_series')
    op.drop_table('playoff_series')
    op.drop_table('players')
    op.drop_table('messages')
    op.drop_table('friendship')
    op.drop_table('friend_requests')
    op.drop_table('financial_accounts')
    op.drop_table('faculty_registrations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_faculties_name_c'), table_name='faculties')
    op.drop_table('faculties')
    op.drop_index(op.f('ix_universities_name_c'), table_name='universities')
    op.drop_table('universities')
    op.drop_index(op.f('ix_roles_default'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('clubs')
    ### end Alembic commands ###
